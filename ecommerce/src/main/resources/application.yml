server:
  port: 8080

spring:
  application:
    name: ecommerce

  datasource:
    url: jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/${MYSQL_DB:ecommerce}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
    username: ${MYSQL_USER:ecom}
    password: ${MYSQL_PASSWORD:secret}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      initialization-fail-timeout: 0
      maximum-pool-size: 10
      minimum-idle: 2
      connection-timeout: 30000
      validation-timeout: 5000
      auto-commit: false

  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: update
    properties:
      hibernate.format_sql: true
      hibernate.jdbc.time_zone: UTC
      hibernate.connection.provider_disables_autocommit: true
    show-sql: false

  sql:
    init:
      mode: never

  elasticsearch:
    uris: http://${ES_HOST:localhost}:${ES_PORT:9200}
    connection-timeout: 5s
    socket-timeout: 10s

  kafka:
    bootstrap-servers: ${KAFKA_BROKER:localhost:9092}
    consumer:
      group-id: ecommerce-local
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        spring.json.trusted.packages: "*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    listener:
      ack-mode: record

management:
  endpoints:
    web:
      exposure:
        include: health,info,readiness
  endpoint:
    health:
      probes:
        enabled: true

logging:
  level:
    root: INFO
    org.hibernate.SQL: WARN
    org.springframework.kafka: INFO
    org.springframework.orm.jpa: INFO

security:
  jwt:
    secret: ${JWT_SECRET:9d3f8b21c7a64a0e2f5b4c17d9a2e6c1b4f0a3d2e9c8b7a6f1d0e2c3a4b5d6f7}
    ttl: ${JWT_TTL:3600}
